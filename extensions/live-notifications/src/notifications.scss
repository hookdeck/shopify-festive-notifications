/** Lights **/

@keyframes flashing {
  0% {
    opacity: 0;
  }
  30% {
    opacity: 0;
  }
  40% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

.bulb {
  opacity: 0;
}

.lit {
  animation: 2s linear infinite flashing;

  &.yellow {
    animation-delay: 0.5s;
  }

  &.blue {
    animation-delay: 1s;
  }

  &.red {
    animation-delay: 1.5s;
  }
}

.lights {
  align-items: top;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(0, 1fr));
  position: fixed;
  inset-inline: 0;
  pointer-events: none;

  &.top {
    top: 0;
  }

  &.bottom {
    bottom: 0;
    rotate: 180deg;
  }

  & svg {
    display: block;
    width: 100%;
  }

  & svg:nth-child(2) ~ svg {
    display: none;

    @media (min-width: 400px) {
      display: block;
    }
  }

  & svg:nth-child(3) ~ svg {
    display: none;

    @media (min-width: 500px) {
      display: block;
    }
  }

  & svg:nth-child(4) ~ svg {
    display: none;

    @media (min-width: 600px) {
      display: block;
    }
  }
}

#lights-def {
  display: block;
  width: 0;
  height: 0;
  overflow: hidden;
}

/** Snowfall **/

@function random_range($min, $max) {
  $rand: random();
  $random_range: $min + floor($rand * (($max - $min) + 1));
  @return $random_range;
}

#notifications_snowfall {
  position: fixed;
  top: 0;
  pointer-events: none;
  overflow: hidden;
  width: 100%;
  height: 100%;
}

.flake {
  pointer-events: auto;
  cursor: pointer;

  $total: 200;
  position: absolute;
  width: 20px;
  height: 20px;
  background: white;
  border-radius: 50%;
  display: block !important;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);

  @for $i from 1 through $total {
    $random-x: random(1000000) * 0.0001vw;
    $random-offset: random_range(-100000, 100000) * 0.0001vw;
    $random-x-end: $random-x + $random-offset;
    $random-x-end-yoyo: $random-x + ($random-offset / 2);
    $random-yoyo-time: random_range(30000, 80000) / 100000;
    $random-yoyo-y: $random-yoyo-time * 100vh;
    $random-scale: random(10000) * 0.0001;
    $fall-duration: random_range(10, 30) * 1s;
    $fall-delay: random(30) * -1s;

    &:nth-child(#{$i}) {
      opacity: random(10000) * 0.0001;
      transform: translate($random-x, -10px) scale($random-scale);
      animation: fall-#{$i} $fall-duration $fall-delay linear infinite;
    }

    @keyframes fall-#{$i} {
      #{percentage($random-yoyo-time)} {
        transform: translate($random-x-end, $random-yoyo-y) scale($random-scale);
      }

      to {
        transform: translate($random-x-end-yoyo, 100vh) scale($random-scale);
      }
    }
  }
}
